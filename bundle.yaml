apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-app-demo
  labels:
    app: k8s-app-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-app-demo
  template:
    metadata:
      labels:
        app: k8s-app-demo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: k8s-app-demo
        image: silnux/k8s-app-demo:latest
        ports:
        - name: web
          containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 2000m
            memory: 2048Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: k8s-app-demo
  name: k8s-app-demo
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: k8s-app-demo
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: k8s-app-demo
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: k8s-app-demo
  podMetricsEndpoints:
  - port: web
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: k8s-app-demo-rule
  namespace: default
spec:
  groups:
    - name: http-requests-alert
      rules:
      - alert: HighHttpRequests
        expr: rate(http_requests_total{namespace!="", pod!=""}[1m]) > 10
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "High HTTP requests detected"
          description: "HTTP requests are above the threshold for more than 2 minutes."
    - name: http-requests-record
      rules:
      - record: http_requests_per_minute
        expr: rate(http_requests_total{namespace!="", pod!=""}[1m])
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: k8s-app-demo-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: k8s-app-demo
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Pods
    pods:
      metric:
        name: http_requests
      target:
        type: AverageValue
        averageValue: "5000m"
